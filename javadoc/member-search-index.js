memberSearchIndex = [{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptAdditiveOperation()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptAND()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptANDTHEN()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptBASICEXPR()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptEQV()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptEXPON()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptExpression()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptIMP()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptMULDIV()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptNOT()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptOR()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptRelation()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptSimpleExpression()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptTEXTCONC()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"acceptUNIMULDIV()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"backLink"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"checkCompatibility(Expression, String)","u":"checkCompatibility(simula.compiler.syntaxClass.expression.Expression,java.lang.String)"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"evaluate()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"expectExpression()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"expectVariable()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"Expression()","u":"%3Cinit%3E()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"get()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"getInt()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"getNumber()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"getQualification(Expression)","u":"getQualification(simula.compiler.syntaxClass.expression.Expression)"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"getQualification(String)","u":"getQualification(java.lang.String)"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"getWriteableVariable()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"maybeStatement()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"printTree(int)"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"put(String)","u":"put(java.lang.String)"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"toString()"},{"p":"simula.compiler.syntaxClass.expression","c":"Expression","l":"type"}];updateSearchResults();